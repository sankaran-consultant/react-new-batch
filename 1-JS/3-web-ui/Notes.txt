


---------------------------------------------------

UI

    - content/data  ==> HTML
    - style         ==> CSS
    - behavior i.e react to events ==> Javascript

    web-ui ==> HTML + CSS + Javascript

---------------------------------------------------


what .js-lang can do on HTML-page in browser-envi?


using browser provided web-APIs,
JavaScript-lang can bring any dynamic activity/data to web-page

browser-APIs :  ==> are based on 'w3c' recommendations ,
implemented nativly by browser & abstracted as JavaScript objects & functions


browser-APIs  :
    ==> DOM, XHR/Fetch ,Timer

using DOM API
--------------
 -> can create,retreive,update,delete HTML elements
 -> can change element's inner text/html content 
 -> can change element's attributes/properties
 -> can change element's styles ( css )
 -> can validate form-fields before submit to server-program
 -> can create rich UI-components like calender,...
 ..

using XHR / fetch API
---------------------
-> can communicate with server-side programs async ( AJAX )

using Timer APIs
------------------
-> can execute any action on timeout/time-interval


HTML-5 APIs - in 2015
-------------------------

Ref : https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5



problems with plain-js(your's code) with browser native APIs
-----------------------------------------------------------

 ==> browser compatability issues
     http://www.caniuse.com
 ==> memory mamanagement is manual ( i.e clean un-used DOM elements)
 ==> performance issues shud take care manually ( i.e DOM access should be minimal )
 ==> data-binding is manual
 ==> too much code for simple operation
 ==> code oraganization is difficult

..

-------------------------------------------------------------------------------------
 soln: 
    ==> using server-side page techonolgies

            i.e JSP, ASP.net, PHP , freemarker, Rails,.. 


        problems:

        => on every request, server-programs need to re-construct same UI layout with new content,
           keeping client state
        => on every request, server programs txring same static resources, this will increase n/w bandwidth
        => on every response, browser reloads current page with new-page 

-------------------------------------------------------------------------------------


best-soln:


    => use client-side(browser) page techonolgies


         ==> using third-party .js Lib & Frameworks

           
    1. DOM + XHR utility lib 

            a. Jquery

    2.  MVC/MVVM pattern based lib & Frameworks 

        a. DOJO
        b. Ext.js
                
        a. Knockout.js
        b. Backbone.js
        c. Ember.js
        d. Angular.js  ==> google-team
        ..

    3. w3c :web-component/custom-tag spec   ==> component-based arch


        1. React.js   ==> Facebook      1'st-rank   : V16  ( our-course )
        2. Angular    ==> google-team               : V6 
        3. Vue.js
        4. Polymer.js 
        5. Aurelia.js
        6. Ember.js
        ..




        
       

















